[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "thothctl"
dynamic = ["version"]
dependencies = [
    "click>=8.0.0",
    "colorama>=0.4.6",
    "pyyaml<7.0.0,>=6.0.0",
    "pyfiglet>=1.0.2",
    "pdfkit>=1.0.0",
    "json2html>=1.3.0",
    "argparse>=1.4.0",
    "zipp>=3.19.2",
    "junit2html>=30.1.3",
    "junitparser>=2.0.0",  # Added for XML report parsing
    "pymsteams>=0.2.2",
    "xmltodict>=0.13.0",
    "gitdb>=4.0.11",
    "azure-devops==7.1.0b4", # pending to upgrade
    "boto3>=1.34.0",
    "terraform-compliance>=1.3.48",
    "checkov==3.2.416",
    "pre-commit>=3.7.1",
    "bc-python-hcl2>=0.4.2",
    "argcomplete>=3.4.0",
    "toml>=0.10.2",
    "inquirer>=3.3.0",
    "rich>=13.7.1",
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "psutil",
    "requests"
]

authors = [
    { name = "Alejandro Velez", email = "velez94@pm.me" },
]

description = "A CLI for Developer Control Plane. Accelerate your cloud IaC deployments."
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.8"

[tool.hatch.metadata]
allow-direct-references = true

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",  # Corrected classifier
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/thothforge/thothctl"

[tool.hatch.version]
path = "src/thothctl/version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/thothctl"]
core-metadata-version = "2.1"


[project.scripts]
thothctl = "thothctl.cli:cli" #"src.thothctl:main"

## Tools
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver"
version_provider = "pep621"
update_changelog_on_bump = true


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
